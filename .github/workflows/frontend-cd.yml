backend-ci.ymlname: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run ESLint
        run: |
          cd starter/frontend
          npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run Tests
        run: |
          cd starter/frontend
          npm test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies and build
        run: |
          cd starter/frontend
          npm ci
          npm run build

      - name: Build Docker Image
        run: |
          cd starter/frontend
          docker build -t frontend-app:${{ github.sha }} .

      - name: Push Docker Image to Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker tag frontend-app:${{ github.sha }} <your-docker-registry>/frontend-app:${{ github.sha }}
          docker push <your-docker-registry>/frontend-app:${{ github.sha }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up Kubernetes context
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl set image deployment/frontend-app frontend-app=<your-docker-registry>/frontend-app:${{ github.sha }}
          kubectl rollout restart deployment/frontend-app